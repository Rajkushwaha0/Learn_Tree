class Solution {
    public int maxDepth(TreeNode node) {
        // if(root == null) return 0;
        // return levelOrder(root);

        if(node== null) return 0;
        return Math.max(maxDepth(node.left),maxDepth(node.right))+1;
    }
    public static int levelOrder(TreeNode root){
        int count=0;
        Queue<TreeNode> q = new LinkedList<>();
        q.add(root);
        while(!q.isEmpty()){
            int level = q.size();
            //List<Integer> fill = new ArrayList<>();
            for(int i=0;i<level;i++){
                TreeNode temp = q.poll();


                if(temp.left!=null){
                    q.add(temp.left);
                }
                if(temp.right!=null) {
                    q.add(temp.right);
                }
            }
            count++;
        }
        return count;

    }
}
