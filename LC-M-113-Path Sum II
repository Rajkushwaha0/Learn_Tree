class Solution {
    public List<List<Integer>> ans = new ArrayList<>();
    public List<List<Integer>> pathSum(TreeNode root, int targetSum) {
        List<Integer> list = new ArrayList<>();
        solve(root,targetSum,0,list);
        return ans;
    }
    public void solve(TreeNode root,int k ,int sum,List<Integer> list){
        if(root==null) return ;
        int m = root.val;
        list.add(m);
        sum+=m;

        if(root.left==null && root.right==null){
            if(sum==k) {
                ans.add(new ArrayList<>(list));
            }
        }
        solve(root.left,k,sum,list);
        solve(root.right,k,sum,list);
        
        // if(left==false && right==false){
        //     return false;
        // }
        list.remove(list.size()-1);
        sum-=m;
        return ;
    }
}
