//Optimized
class Solution {
    public int perv = -100000;
    int min = Integer.MAX_VALUE;
    public int getMinimumDifference(TreeNode root) {

        
        if(root==null){
            return 0;
        }
        getMinimumDifference(root.left);
        min=Math.min(min, Math.abs(root.val-perv));
        perv= root.val;
        getMinimumDifference(root.right);

        return min;
    }
   
}






//Brute Force


class Solution {
    public ArrayList<Integer> list = new ArrayList<>();
    public int getMinimumDifference(TreeNode root) {

        
        solve(root);
        int min = Integer.MAX_VALUE;
        for(int i=0;i<list.size()-1;i++){
            min=Math.min(min,Math.abs(list.get(i)-list.get(i+1)));
        }
        
        
        return min;
    }
    public void solve(TreeNode root){
         if(root==null){
            return ;
        }
        solve(root.left);
        list.add(root.val);
        solve(root.right);

        return ;
    }
}
